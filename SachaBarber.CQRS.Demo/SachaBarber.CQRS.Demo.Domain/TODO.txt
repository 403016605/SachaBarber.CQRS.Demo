1. We should come up with a new EventStore other than InMemory
2. In the Repository.Save where it Publishes out, 
   we should have preregistered handlers in main service something like

    _bus = new InProcessBus();

      var handler = new TestAggregateDidSomethingHandler();
      _bus.RegisterHandler<TestAggregateDidSomething>(handler.Handle);

	  if we find that the event handlers need to the read model they may have to have factories


	  public class TestAggregateDidSomethingHandler : IEventHandler<TestAggregateDidSomething>
    {
        public void Handle(TestAggregateDidSomething message)
        {
            lock (message)
            {
                TimesRun++;
            }
        }

        public int TimesRun { get; private set; }
    }